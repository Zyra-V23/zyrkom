name: CI

on:
  push:
    branches:
      - dev

  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - auto_merge_enabled
      - edited

  merge_group:
    types:
      - checks_requested

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: scripts/rust_fmt.sh --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          components: clippy
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: scripts/clippy.sh

  doc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 doc

  run-wasm32-wasip1-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
          targets: wasm32-wasip1
      - uses: taiki-e/install-action@v2
        with:
          tool: wasmtime
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --target wasm32-wasip1
        env:
          CARGO_TARGET_WASM32_WASIP1_RUNNER: "wasmtime run --"
          RUSTFLAGS: -C target-feature=+simd128

  run-wasm32-unknown-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
          targets: wasm32-unknown-unknown
      - uses: Swatinem/rust-cache@v2
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"
      - run: cd crates/stwo && wasm-pack test --node
        env:
          RUSTFLAGS: -C target-feature=+simd128

  run-neon-tests:
    runs-on: macos-latest-xlarge
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --features="prover"
        env:
          RUSTFLAGS: -C target-feature=+neon

  run-avx-tests:
    strategy:
      matrix:
        target-feature: [avx512f, avx2]
    runs-on: stwo-avx
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap_runners
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --features="prover"
        env:
          RUSTFLAGS: -C target-cpu=native -C target-feature=+${{ matrix.target-feature }}

  run-avx512-bench:
    runs-on: stwo-avx
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap_runners
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - name: Run benchmark
        run: |
            cargo install cargo-criterion
            ./scripts/bench.sh |& tee output.txt
      - name: Download previous benchmark data
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "cargo"
          output-file-path: output.txt
          external-data-json-path: ./cache/benchmark-data.json
          fail-on-alert: true
          summary-always: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-comment-cc-users: "@shaharsamocha7"

  run-avx512-bench-parallel:
    runs-on: stwo-avx
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/bootstrap_runners
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - name: Run benchmark
        run: |
            cargo install cargo-criterion
            ./scripts/bench.sh --features="parallel" |& tee output.txt
      - name: Download previous benchmark data
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Store benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: "cargo"
          output-file-path: output.txt
          external-data-json-path: ./cache/benchmark-data.json
          fail-on-alert: true
          summary-always: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-on-alert: true
          alert-comment-cc-users: "@shaharsamocha7"

  run-tests-no-prover:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --no-default-features --package stwo

  run-framework-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --no-default-features --package stwo-constraint-framework

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --features="tracing, prover"

  run-slow-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --release --features="slow-tests, prover"

  run-tests-parallel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cargo +nightly-2025-04-06 test --features="parallel, prover"

  ensure-no-std-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-04-06
      - uses: Swatinem/rust-cache@v2
      - run: cd ensure-verifier-no_std && cargo build -r

  machete:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-04
      - uses: Swatinem/rust-cache@v2
      - name: Install Machete
        run: cargo +nightly-2025-04-06 install --locked cargo-machete
      - name: Run Machete (detect unused dependencies)
        run: cargo +nightly-2025-04-06 machete

  all-tests:
    runs-on: ubuntu-latest
    needs:
      - clippy
      - format
      - run-tests
      - run-avx-tests
      - run-neon-tests
      - run-wasm32-wasip1-tests
      - run-tests-no-prover
      - run-framework-tests
      - run-slow-tests
      - run-tests-parallel
      - ensure-no-std-core
      - machete
    steps:
      - name: Decide whether all the needed jobs succeeded or failed
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
